{
  "openapi": "3.0.0",
  "info": {
    "title": "2timestoo API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "UserInstance": {
        "type": "object",
        "required": [
          "id",
          "username",
          "name",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "username": {
            "type": "string",
            "description": "Should be unique. Only contains lowercase, numbers, and symbol . and _"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "Login request",
        "operationId": "login",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content":
            {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserInstance"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register user",
        "operationId": "register",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password",
                  "name"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Should be unique. only could contain lowercase letters, numbers, and . or _ symbols",
                    "example": "admin_123"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123",
                    "description": "Minimum 8 chars"
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserInstance"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Possible errors email, username, or phone already taken. Field validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ValidationSingleError"
                    },
                    {
                      "$ref": "#/components/schemas/ValidationError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
